import streamlit as st
import sqlite3
import hashlib
# Database bilan bog'lanish
def get_db_connection():
    conn = sqlite3.connect('learning_platform.db')
    conn.row_factory = sqlite3.Row
    return conn

# Parolni hash qilish
def hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

# Foydalanuvchini ro'yxatdan o'tkazish
def register_user(name, username, password, role='user'):
    conn = get_db_connection()
    cursor = conn.cursor()
    try:
        hashed_password = hash_password(password)
        cursor.execute(
            "INSERT INTO users (name, username, password, role) VALUES (?, ?, ?, ?)",
            (name, username, hashed_password, role))
        conn.commit()
        return True
    except sqlite3.IntegrityError:
        return False
    finally:
        conn.close()

# Foydalanuvchini tekshirish
def authenticate_user(username, password):
    conn = get_db_connection()
    cursor = conn.cursor()
    hashed_password = hash_password(password)
    cursor.execute(
        "SELECT * FROM users WHERE username = ? AND password = ?",
        (username, hashed_password))
    user = cursor.fetchone()
    conn.close()
    return user


# Asosiy ilova
def show_auth_page():
    st.set_page_config(page_title="–†–æ“≥–Ω–∞–º–æ–∏ –æ–º”Ø–∑–∏—à–∏ —Ñ–∞—Ä–¥”£", page_icon="üìö")
    
    # Session stateda foydalanuvchi ma'lumotlarini saqlash
    if 'user' not in st.session_state:
        st.session_state.user = None
    
    # Agar foydalanuvchi login qilmagan bo'lsa
    if not st.session_state.user:
        st.title("–•—É—à –æ–º–∞–¥–µ–¥ –±–∞ –†–æ“≥–Ω–∞–º–æ–∏ –æ–º”Ø–∑–∏—à–∏ —Ñ–∞—Ä–¥”£!")
        
        # Tablar yaratish
        tab1, tab2 = st.tabs(["üîê –î–∞—Ä–æ–º–∞–¥", "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ç—Å–∏—è"])
        
        with tab1:
            st.subheader("–î–∞—Ä–æ–º–∞–¥ –±–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞")
            username = st.text_input("–ù–æ–º–∏ –∏—Å—Ç–∏—Ñ–æ–¥–∞–±–∞—Ä–∞–Ω–¥–∞", key="login_username")
            password = st.text_input("–ü–∞—Ä–æ–ª", type="password", key="login_password")
            
            if st.button("–î–∞—Ä–æ–º–∞–¥–∞–Ω", key="login_button"):
                user = authenticate_user(username, password)
                if user:
                    st.session_state.user = dict(user)
                    st.session_state.user_id = user[0]  # <--- ID ni saqlaymiz
                    st.session_state.username = user[1]
                    st.session_state.is_admin = user[4] is not None and user[4].lower() == 'admin'

                    if st.session_state.is_admin:
                        st.success("–®—É–º–æ —Ö–∞–º—á—É–Ω –∞–¥–º–∏–Ω –±–∞ –ø–ª–ø—Ç—Ñ–æ—Ä–º–∞ –≤–æ—Ä–∏–¥ —à—É–¥–µ–¥.")
                    else:
                        st.success("–®—É–º–æ —Ö–∞–º—á—É–Ω –∏—Å—Ç–∏—Ñ–æ–¥–∞–±–∞—Ä–∞–Ω–¥–∞ –±–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤–æ—Ä–∏–¥ —à—É–¥–µ–¥.")
                    st.rerun()
                else:
                    st.error("–õ–æ–≥–∏–Ω —ë –ø–∞—Ä–æ–ª–∏ –Ω–æ–¥—É—Ä—É—Å—Ç –≤–æ—Ä–∏–¥ –∫–∞—Ä–¥–µ–¥.")


        
        with tab2:
            st.subheader("–°–æ—Ö—Ç–∞–Ω–∏ —Ö–∏—Å–æ–±–∏ –Ω–∞–≤")
            name = st.text_input("–ò—Å–º–∏ –ø—É—Ä—Ä–∞–∞—Ç–æ–Ω", key="reg_name")
            username = st.text_input("–ù–æ–º–∏ –∏—Å—Ç–∏—Ñ–æ–¥–∞–±–∞—Ä–∞–Ω–¥–∞", key="reg_username")
            password = st.text_input("–ü–∞—Ä–æ–ª", type="password", key="reg_password")
            confirm_password = st.text_input("–ü–∞—Ä–æ–ª—Ä–æ —Ç–∞—Å–¥–∏“õ –Ω–∞–º–æ–µ–¥", type="password", key="reg_confirm")
            
            if st.button("–ê–∑ —Ä”Ø–π“≥–∞—Ç –≥—É–∑–∞—Ä”£", key="reg_button"):
                if not name or not username or not password:
                    st.error("–ò–ª—Ç–∏–º–æ—Å “≥–∞–º–∞–∏ –º–∞–π–¥–æ–Ω“≥–æ—Ä–æ –ø—É—Ä—Ä–∞ –Ω–∞–º–æ–µ–¥")
                elif password != confirm_password:
                    st.error("–ü–∞—Ä–æ–ª“≥–æ –º—É–≤–æ—Ñ–∏“õ –Ω–∞—à—É–¥")
                elif len(password) < 6:
                    st.error("–ü–∞—Ä–æ–ª –Ω–∞ –∫–∞–º –∞–∑ 6 —Ä–∞–º–∑ –±–æ—à–∞–¥")
                else:
                    if register_user(name, username, password):
                        # Avtomatik login qilish
                        user = authenticate_user(username, password)
                        if user:
                            st.session_state.user = dict(user)
                            st.session_state.user_id = user[0]
                            st.session_state.username = user[1]
                            st.session_state.is_admin = user[4] is not None and user[4].lower() == 'admin'
                            st.success("“≤–∏—Å–æ–± –±–æ –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç —Å–æ—Ö—Ç–∞ —à—É–¥ –≤–∞ —à—É–º–æ –±–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤–æ—Ä–∏–¥ —à—É–¥–µ–¥.")
                            st.rerun()
                        else:
                            st.warning("–ú—É–∞–º–º–æ –¥–∞—Ä –¥–æ“≥–∏–ª—à–∞–≤”£ –±–æ—Ä–∏ –¥–∏–≥–∞—Ä –∫”Ø—à–∏—à –Ω–∞–º–æ–µ–¥.")
                    else:
                        st.error("–ò–Ω –Ω–æ–º–∏ –∏—Å—Ç–∏—Ñ–æ–¥–∞–±–∞—Ä–∞–Ω–¥–∞ –∞–ª–ª–∞–∫–∞–π –º–∞–≤“∑—É–¥")

    
    # Agar foydalanuvchi login qilgan bo'lsa
    else:
        st.sidebar.title(f"üë§ {st.session_state.user['name']}")
        st.sidebar.write(f"Role: {st.session_state.user['role']}")
        st.sidebar.write(f"Score: {st.session_state.user['score']}")
        
        if st.sidebar.button("–ë–∞—Ä–æ–º–∞–¥"):
            st.session_state.user = None
            st.rerun()
        
        # Asosiy kontent
        st.title(f"–•—É—à –æ–º–∞–¥–µ–¥, {st.session_state.user['name']}!")
        st.write("–°–∞“≥–∏—Ñ–∞–∏ –∞—Å–æ—Å”£")
        
        '''# Foydalanuvchi roliga qarab turli funksiyalar
        if st.session_state.user['role'] == 'admin':
            st.warning("–®—É–º–æ —Ö–∞–º—á—É–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤–æ—Ä–∏–¥ —à—É–¥–µ–¥")
            # Admin funksiyalari qo'shishingiz mumkin'''

if __name__ == "__main__":
    main()
